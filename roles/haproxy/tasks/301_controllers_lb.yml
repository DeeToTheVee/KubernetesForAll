---

- name: "[Networking] - Get interfaces - Controllers"
  shell: nmcli con show | grep "{{ansible_default_ipv4.interface}}" | awk -F ' {2,}' '{print $1}'
  register: interface_name
  when:
    - K8S_CONTROL_PLANE_LB_ADDRESS not in ansible_all_ipv4_addresses
    - node_group == 'k8s-controllers'

- name: "[Networking] - Create VIP Interface - Controllers"
  shell: "nmcli con modify '{{interface_name.stdout}}' +ipv4.addresses {{ K8S_CONTROL_PLANE_LB_ADDRESS }}/24 && nmcli con mod '{{interface_name.stdout}}' ipv4.routes '192.168.0.0/24 {{ K8S_CONTROL_PLANE_LB_ADDRESS }}'"
  register: ip_configured
  when:
    - K8S_CONTROL_PLANE_LB_ADDRESS not in ansible_all_ipv4_addresses
    - node_group == 'k8s-controllers'

- name: "[Networking] - Reload network - Controllers"
  shell: "nmcli con down '{{interface_name.stdout}}' && nmcli con up '{{interface_name.stdout}}'"
  when:
    - ip_configured.changed
    - node_group == 'k8s-controllers'