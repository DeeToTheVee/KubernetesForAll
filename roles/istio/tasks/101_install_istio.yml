---

- name: "[Istio - Install Istio]: Enable Istio Helm Repo"
  command: "helm repo add istio.io https://storage.googleapis.com/istio-release/releases/{{ISTIO_VERSION}}/charts/ \
           --tls \
           --tls-verify \
           --tls-cert={{PKI_DIR}}/tiller-host/tiller-host.pem \
           --tls-key={{PKI_DIR}}/tiller-host/tiller-host-key.pem \
           --tls-ca-cert={{PKI_DIR}}/tiller-ca/ca.pem"

- name: "[Istio - Install Istio]: Create istio-system namespace"
  k8s:
    state: present
    validate_certs: no
    kubeconfig: "/home/{{LOCAL_USER}}/.kube/config"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: istio-system

- name: "[Istio - Install Istio]: Update Helm repo"
  command: "helm repo update"

- name: "[Istio - Install Istio]: Generate Istio Init Helm template"
  shell: "helm template install/kubernetes/helm/istio-init --name istio-init --namespace istio-system --set gateways.istio-ingressgateway.type=NodePort > /tmp/isto-init.yml"
  args:
    chdir: "/opt/istio-{{ISTIO_VERSION}}"
    creates: /tmp/isto-init.yml

#- name: "[Istio - Install Istio]: Apply Istio Init Helm template"
#  k8s:
#    state: present
#    validate_certs: no
#    kubeconfig: "/home/{{LOCAL_USER}}/.kube/config"
#    namespace: istio-system
#    src: /tmp/isto-init.yml

- name: "[Istio - Install Istio]: Apply Istio Init Helm template"
  shell: "kubectl apply -f /tmp/isto-init.yml"

- name: "[Istio - Install Istio]: Check Istio CRDs"
  k8s_info:
    kubeconfig: "/home/{{LOCAL_USER}}/.kube/config"
    api_version: v1
    kind: CustomResourceDefinition
    namespace: istio-system
  register: check_istio_crd

#- name: "[Istio - Install Istio]: Output results of Istio CRDs"
#  debug:
#    msg: "{{check_istio_crd}}"

- name: "[Istio - Install Istio]: Generate Istio Helm template"
  shell: "helm template install/kubernetes/helm/istio --name istio -namespace istio-system --set gateways.istio-ingressgateway.type=NodePort > /tmp/istio-deploy.yml"
  args:
    chdir: "/opt/istio-{{ISTIO_VERSION}}"
    creates: /tmp/istio-deploy.yml

#- name: "[Istio - Fetch Istio]: Apply Istio Helm template"
#  k8s:
#    state: present
#    validate_certs: no
#    kubeconfig: "/home/{{LOCAL_USER}}/.kube/config"
#    namespace: istio-system
#    src: /tmp/istio-deploy.yml

- name: "[Istio - Install Istio]: Apply Istio Helm template"
  shell: "kubectl apply -f /tmp/istio-deploy.yml"

- name: "[Istio - Install Istio]: Check Istio Services"
  k8s_info:
    kubeconfig: "/home/{{LOCAL_USER}}/.kube/config"
    api_version: v1
    kind: Service
    namespace: istio-system
  register: check_istio_svc

#- name: "[Istio - Install Istio]: Output results of Istio Services"
#  debug:
#    msg: "{{check_istio_svc}}"

- name: "[Istio - Install Istio]: Check Istio Pods"
  k8s_info:
    kubeconfig: "/home/{{LOCAL_USER}}/.kube/config"
    api_version: v1
    kind: Pod
    namespace: istio-system
  register: check_istio_po

#- name: "[Istio - Install Istio]: Output results of Istio Pods"
#  debug:
#    msg: "{{check_istio_po}}"