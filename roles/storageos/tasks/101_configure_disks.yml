---

- name: "[Configure disks]: Check if StorageOS mount exists"
  stat:
    path: /var/lib/storageos/data
  register: storageos_disk_check
  when: not hostvars[ansible_hostname]['REMOTE_INSTANCE']

- name: "[Configure disks]: Create a new primary partition of type LVM"
  shell: "parted -s /dev/vdb mklabel msdos mkpart primary ext4 0% 100%"
#  parted:
#    device: /dev/vdb
#    number: 1
#    state: present
#    part_start: 0%
#    part_end: 100%
#    part_type: primary
  when: not storageos_disk_check.stat.exists and not hostvars[ansible_hostname]['REMOTE_INSTANCE']

#- name: "[Configure disks]: Create a volume group on top of /dev/vdb1"
#  lvg:
#    vg: "vg_storageos"
#    pvs: /dev/vdb1
#  when: not storageos_disk_check.stat.exists and not hostvars[ansible_hostname]['REMOTE_INSTANCE']
#
#- name: "[configure disks]: Create a logical volume the size of all remaining space in the volume group"
#  lvol:
#    vg: "vg_storageos"
#    lv: "lv_storage"
#    size: 100%FREE
#  when: not storageos_disk_check.stat.exists and not hostvars[ansible_hostname]['REMOTE_INSTANCE']

- name: "[Configure disks]: Format storage disk"
  filesystem:
    fstype: ext4
    dev: /dev/vdb1
  when: not storageos_disk_check.stat.exists and not hostvars[ansible_hostname]['REMOTE_INSTANCE']

- name: "[Configure disks]: Create the storage os directory"
  file:
    path: /var/lib/storageos/data
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: '0755'
  when: not storageos_disk_check.stat.exists and not hostvars[ansible_hostname]['REMOTE_INSTANCE']

- name: "[Configure disks]: Mount StorageOS drive"
  mount:
    path: /var/lib/storageos/data
    src: /dev/vdb1
    fstype: ext4
    opts: rw
    state: present
  when: not storageos_disk_check.stat.exists and not hostvars[ansible_hostname]['REMOTE_INSTANCE']